const axios = require('../utils/axiosInstance');

module.exports = (bot) => {
  bot.onText(/\/account/, async (msg) => {
    const chatId = String(msg.chat.id);

    try {
      const response = await axios.post('/api/account', { chatId });

      const accountInfo = response.data;

      let accountMessage = `
        üë§ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç:
        - –ò–º—è: ${accountInfo.firstName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
        - –§–∞–º–∏–ª–∏—è: ${accountInfo.lastName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
        - Telegram ID: ${accountInfo.telegramId}
        - –ü–æ–¥–ø–∏—Å–∫–∞: ${accountInfo.subscription || '–ù–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏'}
        - –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏: ${accountInfo.endDate || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
      `;

      if (accountInfo.models && accountInfo.models.length > 0) {
        accountMessage += '\n\nüìä –û—Å—Ç–∞–≤—à–∏–µ—Å—è –∑–∞–ø—Ä–æ—Å—ã –ø–æ –º–æ–¥–µ–ª—è–º:\n';
        accountInfo.models.forEach((model) => {
          accountMessage += `- ${model.name}: ${model.remainingRequests} –∑–∞–ø—Ä–æ—Å–æ–≤\n`;
        });
      } else {
        accountMessage += '\n\nüìä –ó–∞–ø—Ä–æ—Å—ã: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.';
      }

      bot.sendMessage(chatId, accountMessage);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ:', error);
      const errorMessage =
        error.response?.data?.error || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
      bot.sendMessage(chatId, errorMessage);
    }
  });
};
