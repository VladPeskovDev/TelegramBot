const client = require('prom-client');
//const loggerWinston = require('./loggerWinston'); 


const register = new client.Registry();

const requestCounter = new client.Counter({
  name: 'bot_requests_total',
  help: '–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –±–æ—Ç—É',
  labelNames: ['endpoint'], 
});

const activeUsersGauge = new client.Gauge({
  name: 'bot_active_users',
  help: '–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
});

const responseTimeHistogram = new client.Histogram({
  name: 'bot_response_time_seconds',
  help: '–ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö',
  labelNames: ['endpoint'], 
  buckets: [0.1, 0.3, 0.5, 1, 1.5, 2, 5], // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
});

const totalUsersGauge = new client.Gauge({
  name: 'bot_total_users',
  help: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ —Å—É—Ç–∫–∏', 
});

const maxOnlineGauge = new client.Gauge({
  name: 'bot_max_online_users',
  help: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –æ–Ω–ª–∞–π–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
});

const dailyUsersGauge = new client.Gauge({
  name: 'bot_daily_users',
  help: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ —Å—É—Ç–∫–∏',
});

// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è  —Ç–µ–∫—É—â–µ–≥–æ –º–∞–∫—Å –æ–Ω–ª–∞–π–Ω–∞
let maxOnlineUsers = 0;

// –º–µ—Ç—Ä–∏–∫–∞ –º–∞–∫—Å –æ–Ω–ª–∞–π–Ω–∞
function updateMaxOnline(currentOnline) {
  if (currentOnline > maxOnlineUsers) {
    maxOnlineUsers = currentOnline;
    maxOnlineGauge.set(maxOnlineUsers); 
    //loggerWinston.info(`üìà –û–±–Ω–æ–≤–ª–µ–Ω –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –æ–Ω–ª–∞–π–Ω: ${maxOnlineUsers}`);
  }
}


register.registerMetric(requestCounter);
register.registerMetric(activeUsersGauge);
register.registerMetric(responseTimeHistogram);
register.registerMetric(totalUsersGauge);
register.registerMetric(maxOnlineGauge);
register.registerMetric(dailyUsersGauge);


module.exports = {
  requestCounter,
  activeUsersGauge,
  responseTimeHistogram,
  totalUsersGauge,
  maxOnlineGauge,
  dailyUsersGauge,
  updateMaxOnline,
  register,
};
