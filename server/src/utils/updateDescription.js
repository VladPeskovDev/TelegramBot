 //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤   

const { UserModelRequest } = require('../../db/models');
const { Op } = require('sequelize');
const bot = require('../bot'); 


async function updateBotDescription() {
  try {
    console.log('üïí [BOT UPDATE] –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞...');

    // üìä –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –º–µ—Å—è—Ü
    const activeUsersCount = await UserModelRequest.count({
      where: {
        createdAt: {
          [Op.gte]: new Date(new Date().setMonth(new Date().getMonth() - 1)),
        },
      },
      distinct: true,
      col: 'user_id',
    });

    // üìù –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞
    const description = `ü§ñ –ë–æ–ª–µ–µ ${activeUsersCount} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü! üöÄ`;

    await bot.setMyDescription(description);

    console.log(`‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: "${description}"`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è –±–æ—Ç–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
updateBotDescription();

module.exports = { updateBotDescription };

/* const { updateBotDescription } = require('./utils/updateDescription');


// üïí Cron Job –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –±–æ—Ç–∞ (–∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 3:00 –Ω–æ—á–∏)
cron.schedule('0 3 * * *', async () => {
    console.log('üîÑ [CRON] –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –±–æ—Ç–∞...');
    await updateBotDescription();
  }); */


 